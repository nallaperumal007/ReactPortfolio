{"version":3,"sources":["pages/portfolio/styles/portfolio.js","pages/portfolio/index.jsx"],"names":["useStyles","makeStyles","heading","color","paddingTop","textTransform","mainContainer","height","cardContainer","maxWidth","margin","border","boxShadow","projectName","projectDescription","textAlign","button","backgroundColor","chip","Portfolio","classes","Box","component","className","Typography","variant","align","Grid","container","justify","projects","map","project","item","xs","sm","md","lg","key","id","Card","CardMedia","alt","image","CardContent","gutterBottom","name","description","tools","tool","Chip","size","label","CardActions","Button","target","href","live","source"],"mappings":"uQAEaA,EAAYC,aAAW,iBAAO,CACzCC,QAAS,CACPC,MAAO,SACPC,WAAY,SACZC,cAAe,aAEjBC,cAAe,CACbC,OAAQ,QAEVC,cAAe,CACbC,SAAU,IACVC,OAAQ,YACRC,OAAQ,OACR,UAAW,CACTC,UAAW,6BACXD,OAAQ,sBAIZE,YAAa,CACXV,MAAO,UAETW,mBAAoB,CAClBX,MAAO,oBACPY,UAAW,WAEbC,OAAQ,CACNC,gBAAiB,oBAEnBC,KAAM,CACJR,OAAQ,yBCsDGS,UAtEG,WAChB,IAAMC,EAAUpB,IAChB,OACE,kBAACqB,EAAA,EAAD,CAAKC,UAAU,MAAMC,UAAWH,EAAQd,eACtC,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASH,UAAWH,EAAQlB,SAAS,YAGpE,kBAACyB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACrBC,IAASC,KAAI,SAACC,GAAD,OACZ,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAKN,EAAQO,IACpD,kBAACC,EAAA,EAAD,CAAMjB,UAAWH,EAAQZ,eACvB,kBAACiC,EAAA,EAAD,CACEnB,UAAU,MACVoB,IAAI,YACJnC,OAAO,MACPoC,MAAOX,EAAQW,QAEjB,kBAACC,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,CACEC,QAAQ,KACRoB,cAAY,EACZtB,UAAWH,EAAQP,aAElBmB,EAAQc,MAEX,kBAACtB,EAAA,EAAD,CACEC,QAAQ,QACRtB,MAAM,gBACNoB,UAAWH,EAAQN,oBAElBkB,EAAQe,aAEVf,EAAQgB,MAAMjB,KAAI,SAACkB,GAAD,OACjB,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAOH,EACPX,IAAKW,EACL9C,MAAM,YACNoB,UAAWH,EAAQF,WAIzB,kBAACmC,EAAA,EAAD,CAAa9B,UAAWH,EAAQJ,QAC9B,kBAACsC,EAAA,EAAD,CACE7B,QAAQ,YACR0B,KAAK,QACLhD,MAAM,UACNoD,OAAO,QACPC,KAAMxB,EAAQyB,MACf,aAGD,kBAACH,EAAA,EAAD,CACE7B,QAAQ,YACR0B,KAAK,QACLhD,MAAM,UACNoD,OAAO,QACPC,KAAMxB,EAAQ0B,QACf","file":"static/js/11.e2d240de.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n  heading: {\n    color: 'tomato',\n    paddingTop: '1.5rem',\n    textTransform: 'uppercase',\n  },\n  mainContainer: {\n    height: '100%',\n  },\n  cardContainer: {\n    maxWidth: 345,\n    margin: '3rem auto',\n    border: 'none',\n    '&:hover': {\n      boxShadow: '0 0 11px rgba(33,33,33,.2)',\n      border: '1px solid #E26347',\n    },\n  },\n\n  projectName: {\n    color: 'tomato',\n  },\n  projectDescription: {\n    color: 'rgb(132 29 2 / 1)',\n    textAlign: 'justify',\n  },\n  button: {\n    backgroundColor: 'rgb(218 218 218)',\n  },\n  chip: {\n    margin: '0.5rem 0.5rem 0 0',\n  },\n}));\n","import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Chip,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\n\nimport { projects } from '../../data/data';\nimport { useStyles } from './styles/portfolio';\n\nconst Portfolio = () => {\n  const classes = useStyles();\n  return (\n    <Box component=\"div\" className={classes.mainContainer}>\n      <Typography variant=\"h4\" align=\"center\" className={classes.heading}>\n        Projects\n      </Typography>\n      <Grid container justify=\"center\">\n        {projects.map((project) => (\n          <Grid item xs={12} sm={12} md={6} lg={4} key={project.id}>\n            <Card className={classes.cardContainer}>\n              <CardMedia\n                component=\"img\"\n                alt=\"Project 1\"\n                height=\"140\"\n                image={project.image}\n              />\n              <CardContent>\n                <Typography\n                  variant=\"h5\"\n                  gutterBottom\n                  className={classes.projectName}\n                >\n                  {project.name}\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.projectDescription}\n                >\n                  {project.description}\n                </Typography>\n                {project.tools.map((tool) => (\n                  <Chip\n                    size=\"small\"\n                    label={tool}\n                    key={tool}\n                    color=\"secondary\"\n                    className={classes.chip}\n                  />\n                ))}\n              </CardContent>\n              <CardActions className={classes.button}>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  target=\"blank\"\n                  href={project.live}\n                >\n                  Live Demo\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"default\"\n                  target=\"blank\"\n                  href={project.source}\n                >\n                  Source Code\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Portfolio;\n"],"sourceRoot":""}